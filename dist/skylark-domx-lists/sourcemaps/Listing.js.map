{"version":3,"sources":["Listing.js"],"names":["define","langx","$","elmx","plugins","Collapse","lists","Listing","Plugin","inherit","klassName","pluginName","options","multiSelect","multitier","mode","levels","selectors","children","hasChildren","toggler","classes","collapsed","expanded","multiExpand","tree","expandIcon","collapseIcon","templates","treeIcon","itemGroup","accordion","popover","toggle","active","item","template","checkable","icon","text","selected","state","Object","_construct","elm","this","overrided","self","velm","_velm","_elm","itemSelector","_$items","on","veItem","hasClass","value","data","undefined","index","multitierMode","childrenSelector","togglerSelector","has","find","e","preventDefault","closest","siblings","removeClass","plugin","hide","toggleClass","filter","addClass","not","_refresh","updates","findItem","valueOrIdx","isNumber","eq","oldValue","selectOneItem","register"],"mappings":"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","file":"../Listing.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-domx-panels/Collapse\",\r\n  \"./lists\"\r\n],function(langx,$,elmx,plugins,Collapse,lists){\r\n\r\n    var Listing = plugins.Plugin.inherit({\r\n        klassName : \"Listing\",\r\n\r\n        pluginName : \"lark.listing\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n        \t//multitier : false,\r\n\r\n          multitier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popover\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\",\r\n              toggler : \" > a\"\r\n            },\r\n            classes : {\r\n              collapsed : \"\",\r\n              expanded : \"\"\r\n            },\r\n\r\n            multiExpand : true,\r\n\r\n            tree : {\r\n              classes : {\r\n                expandIcon: 'glyphicon-plus',    // \"glyphicon-chevron-down\", 'glyphicon-folder-open'\r\n                collapseIcon: 'glyphicon-minus', // \"glyphicon-chevron-right\", 'glyphicon-folder-close'\r\n                children : \"\"                              // \"list-group children\"\r\n              },\r\n              templates : {\r\n                treeIcon : \"<i class=\\\"glyphicon\\\"></i>\",\r\n                itemGroup: \"\"\r\n\r\n              },\r\n              selectors : {\r\n                treeIcon : \" > i\"\r\n              }\r\n            },\r\n\r\n            accordion : {\r\n              selectors : {\r\n                toggler : \" > a\"\r\n              }\r\n\r\n            },\r\n            popover : {\r\n              selectors : {\r\n                toggler : \" > a\"\r\n              }\r\n\r\n            }            \r\n          },\r\n\r\n        \ttoggle : false,\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                velm = this._velm = elmx(this._elm),\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.selected = value;\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.selected = this.options.selected;\r\n\r\n            var $this = velm,\r\n                multitierMode = this.options.multitier.mode,\r\n                hasChildrenSelector = this.options.multitier.selectors.hasChildren,\r\n                childrenSelector = this.options.multitier.selectors.children,\r\n                iconSelector = this.options.item.selectors.icon,\r\n                textSelector = this.options.item.selectors.text,\r\n                itemTemplate = this.options.item.template,                \r\n                obj = this;\r\n\r\n\r\n            if (multitierMode) {\r\n            /*\r\n              if (multitierMode == \"tree\") {\r\n                   var treeIconTemplate = this.options.multitier.tree.templates.treeIcon,\r\n                       treeIconSelector = this.options.multitier.tree.selectors.treeIcon,\r\n                       expandIconClass = this.options.multitier.tree.classes.expandIcon,\r\n                       collapseIconClass = this.options.multitier.tree.classes.collapseIcon;\r\n\r\n                   this._$items.each(function(){\r\n                     if($(this).is(hasChildrenSelector)) {\r\n                        var children = $(this).find(childrenSelector);\r\n                        $(children).remove();\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(treeIconSelector).addClass(expandIconClass).on(\"click\" + \".\" + self.pluginName, function(e) {\r\n                            e.preventDefault();\r\n\r\n                            $(this).toggleClass(expandIconClass).toggleClass(collapseIconClass);\r\n\r\n                            $(this).closest(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                            if ($toggle) {\r\n                                $(this).closest(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                            }\r\n                        });\r\n\r\n                        $(this).find(iconSelector).addClass('glyphicon-folder-open');\r\n                        $(this).find(textSelector).text(text);\r\n                        $(this).append(children);\r\n\r\n\r\n\r\n                      }  else {\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(iconSelector).addClass('glyphicon-file');\r\n                        $(this).find(textSelector).text(text);\r\n                    }\r\n\r\n                   });\r\n              } else if (multitierMode == \"accordion\" || multitierMode==\"popover\"  ) {\r\n                var togglerSelector = self.options.multitier.accordion.selectors.toggler;\r\n\r\n                this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                    e.preventDefault();\r\n\r\n                    $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).collapse(\"toggle\");\r\n\r\n                    if ($toggle) {\r\n                        $(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").collapse(\"hide\");\r\n                    }\r\n                });\r\n              }\r\n              */ \r\n              var multiExpand = self.options.multitier.multiExpand,\r\n                  togglerSelector = self.options.multitier.selectors.toggler;\r\n\r\n              this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                  e.preventDefault();\r\n\r\n                  if (multiExpand) {\r\n                      $(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").plugin(\"domx.collapse\").hide();\r\n                  }\r\n                  $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).plugin(\"domx.collapse\").toggle();\r\n              });\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n              \r\n            }   \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Listing,\"lark.listing\");\r\n\r\n  return lists.Listing = Listing;\r\n\r\n});\r\n\r\n\r\n\r\n"]}