{"version":3,"sources":["skylark-domx-plugins-lists.js"],"names":["define","skylark","attach","langx","$","elmx","plugins","lists","Group","Plugin","inherit","klassName","pluginName","options","multiSelect","classes","active","selectors","item","template","checkable","icon","text","selected","state","Object","_construct","elm","this","overrided","self","velm","_velm","_elm","itemSelector","_$items","on","veItem","hasClass","value","data","undefined","index","_refresh","updates","findItem","valueOrIdx","isNumber","eq","filter","oldValue","removeClass","addClass","selectOneItem","register","Collapsable","_MultitierList","multitier","mode","levels","children","hasChildren","toggler","collapsed","expanded","multiExpand","childrenSelector","togglerSelector","has","find","e","preventDefault","scall","closest","siblings","plugin","toggleClass","toggle","not","Foldable","Cascadable","noder","eventer","Slidable","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","controlsClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","onopen","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","support","element","prop","touch","window","ontouchstart","DocumentTouch","document","transitions","webkitTransition","end","prefix","MozTransition","OTransition","transition","hasOwnProperty","style","name","elementTests","translateZ","body","appendChild","slice","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","gallery","list","items","num","length","initStartIndex","initWidget","initEventListeners","ontransitionend","play","createIndicator","obj","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","title","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","indicators","push","setActiveIndicator","activeIndicator","slide","to","speed","clearTimeout","timeout","direction","naturalDirection","diff","circle","Math","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","next","time","stop","interval","elements","debounce","bind","pause","add","i","concat","Array","prototype","call","addSlide","positionSlide","initSlides","resetSlides","empty","unloadAllSlides","slides","handleClose","destroyEventListeners","hide","overflow","bodyOverflowStyle","close","that","closeHandler","event","target","off","dist","translateX","x","y","translateY","from","start","Date","getTime","timer","setInterval","timeElap","left","clearInterval","floor","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","defer","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","keyCode","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","className","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","firstChild","alt","createTextNode","setTimeout","func","args","wait","apply","callback","renderItem","loadElement","proxyListener","limit","min","j","unloadSlide","slidePrototype","width","reload","query","imagePrototype","elementPrototype","clientWidth","len","parseInt","getAttribute","handleOpen","first","openHandler","show","initOptions","mixin","SliderView","Tiler","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","viewClass","_renderItem","itemHtml","append","Cascade","main"],"mappings":"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","file":"../skylark-domx-plugins-lists.js","sourcesContent":["define('skylark-domx-plugins-lists/lists',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.plugins.lists\",{});\r\n});\n define('skylark-domx-plugins-lists/Group',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\"\r\n],function(langx,$,elmx,plugins,lists){\r\n\r\n    var Group = plugins.Plugin.inherit({\r\n        klassName : \"Group\",\r\n\r\n        pluginName : \"domx.plugins.lists.group\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                velm = this._velm = elmx(this._elm),\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.selected = value;\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.selected = this.options.selected;\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Group);\r\n\r\n  return lists.Group = Group;\r\n\r\n});\r\n\r\n\r\n\r\n\n define('skylark-domx-plugins-lists/_MultitierList',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-domx-plugins-toggles/Collapsable\",\r\n  \"./lists\",\r\n  \"./Group\"\r\n],function(langx,$,elmx,plugins,Collapsable,lists,Group){\r\n\r\n    var _MultitierList = Group.inherit({\r\n        klassName : \"_MultitierList\",\r\n\r\n        options : {\r\n          multitier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popover\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\",\r\n              toggler : \" > a\"\r\n            },\r\n            classes : {\r\n              collapsed : \"\",\r\n              expanded : \"\"\r\n            },\r\n\r\n            multiExpand : true,\r\n          }\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            var multitierMode = this.options.multitier.mode,\r\n                hasChildrenSelector = this.options.multitier.selectors.hasChildren,\r\n                childrenSelector = this.options.multitier.selectors.children;           \r\n\r\n\r\n              var multiExpand = self.options.multitier.multiExpand,\r\n                  togglerSelector = self.options.multitier.selectors.toggler;\r\n\r\n              this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                  e.preventDefault();\r\n\r\n                  if (multiExpand) {\r\n                      langx.scall($(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").plugin(\"domx.toggles.collapsable\"),\"hide\");\r\n                  }\r\n                  $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).plugin(\"domx.toggles.collapsable\").toggle();\r\n              });\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n        }\r\n\r\n  });\r\n\r\n\r\n  return lists._MultitierList = _MultitierList;\r\n\r\n});\r\n\r\n\r\n\r\n\n define('skylark-domx-plugins-lists/Foldable',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n  var Foldable = _MultitierList.inherit({\r\n    klassName : \"Foldable\",\r\n\r\n    pluginName : \"domx.plugins.lists.foldable\"\r\n\r\n  });\r\n\r\n  plugins.register(Foldable);\r\n\r\n  return lists.Foldable = Foldable;\r\n});\r\n\n define('skylark-domx-plugins-lists/Cascadable',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n\r\n  var Cascadable = _MultitierList.inherit({\r\n    klassName : \"Cascadable\",\r\n\r\n    pluginName : \"domx.plugins.lists.cascadable\"\r\n  });\r\n\r\n\r\n  plugins.register(Cascadable);\r\n\r\n  return lists.Cascadable = Cascadable;\t\r\n});\ndefine('skylark-domx-plugins-lists/Slidable',[\r\n  'skylark-langx/langx',\r\n  'skylark-domx-noder',\r\n  'skylark-domx-eventer',\r\n  'skylark-domx-query',\r\n  'skylark-domx-plugins',\r\n  \"./lists\"\r\n], function (langx, noder, eventer, $,plugins,lists) {\r\n  'use strict'\r\n  var Slidable = plugins.Plugin.inherit({\r\n    klassName: \"Slidable\",\r\n\r\n    pluginName : \"domx.plugins.lists.slidable\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the gallery view:\r\n      ///container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'lark-domx-slidable-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'lark-domx-slidable-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'lark-domx-slidable-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'lark-domx-slidable-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'lark-domx-slidable-playing',\r\n\r\n\t\t\t// The class to add when the gallery controls are visible:\r\n\t\t  controlsClass: 'lark-domx-slidable-controls',\r\n\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: false,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: false,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: false,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n\r\n\r\n        // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'thumbnail',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: undefined,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: undefined,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: undefined,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: undefined\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch: window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n\r\n      function elementTests() {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n            .getComputedStyle(element)\r\n            .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n            .getComputedStyle(element)\r\n            .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame: window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame: window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    _construct: function (gallery, options) {\r\n      this.overrided(gallery, options);\r\n      this._velm = this.elmx();\r\n\r\n      this.list = this.options.items;\r\n      //this.options.container = this.elm();\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      if (this.initWidget() === false) {\r\n        return false\r\n      }\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    createIndicator: function (obj) {\r\n      var gallery = this.gallery,\r\n        indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = obj.title;\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = obj[thumbnailProperty]\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      ///window.clearTimeout(this.timeout);\r\n      if (this.timeout) {\r\n        this.timeout.stop();\r\n        this.timeout = null;\r\n      }\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        /*\r\n        this.timeout = this.setTimeout(\r\n          (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n          [this.index + 1, this.options.slideshowTransitionSpeed],\r\n          this.interval\r\n        )*/\r\n\r\n        this.timeout = langx.debounce(this.slide.bind(this),this.interval,true)(this.index + 1, this.options.slideshowTransitionSpeed);\r\n      }\r\n      this._velm.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      //window.clearTimeout(this.timeout)\r\n      if (this.timeout) {\r\n        this.timeout.stop();\r\n        this.timeout = null;\r\n      }\r\n      this.interval = null\r\n      //if (this.cancelAnimationFrame) {\r\n      //  this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n      //  this.animationFrameId = null\r\n      //}\r\n      this._velm.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this._velm.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this._velm\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty();\r\n      this.unloadAllSlides();\r\n      this.slides = [];\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    handleClose: function () {\r\n      if (this.activeIndicator) {\r\n        this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n      }\r\n\r\n      var options = this.options\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause();\r\n      this._velm.hide();\r\n      this._velm.removeClass([options.displayClass,options.singleClass,options.leftEdgeClass,options.rightEdgeClass]);\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n\r\n      function closeHandler(event) {\r\n        if (event.target === that._elm) {\r\n          that._velm.off(that.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this._velm.on(this.support.transition.end, closeHandler)\r\n        this._velm.removeClass(this.options.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault();\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {;\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n              (index === this.num - 1 && touchDeltaX < 0) ?\r\n              Math.abs(touchDeltaX) / this.slideWidth + 1 :\r\n              1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose = !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        ///this.setTimeout(this.options.onslideend, [this.index, slide])\r\n        langx.defer(this.options.onslideend, [this.index, slide]);\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this._velm.clientHeight()) {\r\n        target.style.maxHeight = this._velm.clientHeight()\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      ///this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n      langx.defer(this.options.onslidecomplete, [index, parent]);\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            eventer.stop(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            eventer.stop(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            eventer.stop(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            eventer.stop(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        eventer.stop(event)\r\n        this.slide(this.getNodeIndex(target));\r\n        return;\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n        return;\r\n      }\r\n\r\n\r\n      function isTarget(className) {\r\n        return $(target).hasClass(className) || $(parent).hasClass(className)\r\n      }\r\n      if (isTarget(options.toggleClass)) {\r\n        // Click on \"toggle\" control\r\n        eventer.stop(event)\r\n        this.toggleControls()\r\n      } else if (isTarget(options.prevClass)) {\r\n        // Click on \"prev\" control\r\n        eventer.stop(event)\r\n        this.prev()\r\n      } else if (isTarget(options.nextClass)) {\r\n        // Click on \"next\" control\r\n        eventer.stop(event)\r\n        this.next()\r\n      } else if (isTarget(options.closeClass)) {\r\n        // Click on \"close\" control\r\n        eventer.stop(event)\r\n        this.close()\r\n      } else if (isTarget(options.playPauseClass)) {\r\n        // Click on \"play-pause\" control\r\n        eventer.stop(event)\r\n        this.toggleSlideshow()\r\n      } else if (parent === this.slidesContainer[0]) {\r\n        // Click on slide background\r\n        if (options.closeOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.close()\r\n        } else if (options.toggleControlsOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.toggleControls()\r\n        }\r\n      } else if (\r\n        parent.parentNode &&\r\n        parent.parentNode === this.slidesContainer[0]\r\n      ) {\r\n        // Click on displayed element\r\n        if (options.toggleControlsOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.toggleControls()\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this._velm.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this._velm.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this._velm.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this._velm.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index);\r\n      this.setActiveIndicator(index)\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      ///this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n      langx.defer(this.options.onslide, [index, this.slides[index]]);\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var element = this.options.renderItem(obj, callback);\r\n      $(element).addClass(this.options.slideContentClass);\r\n      return element;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n              this.options.slideErrorClass\r\n            ) ?\r\n            3 :\r\n            2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).addClass(this.options.slideLoadingClass)\r\n          this.slides[index].appendChild(\r\n            this.createElement(this.list[index], this.proxyListener)\r\n          )\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide);\r\n      this.addIndicator(index)\r\n\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index ?\r\n          -this.slideWidth :\r\n          this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      if (!reload) {\r\n        this.indicatorContainer = this._velm.query(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n      }\r\n\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this._velm.clientWidth();\r\n      this.slideHeight = this._velm.clientHeight();\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this._velm.hasClass(controlsClass)) {\r\n        this._velm.removeClass(controlsClass)\r\n      } else {\r\n        this._velm.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var index = this.options.index;\r\n\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n\r\n      function proxyListener(event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type ?\r\n          'transitionend' :\r\n          event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this._velm.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this._velm.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initWidget: function () {\r\n      var that = this\r\n\r\n      function openHandler(event) {\r\n        if (event.target === that._elm) {\r\n          that._velm.off(that.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n      //this.container = $(this.options.container)\r\n      //if (!this.container.length) {\r\n      //  this.console.log(\r\n      //    'blueimp Gallery: Widget container not found.',\r\n      //    this.options.container\r\n      //  )\r\n      //  return false\r\n     // }\r\n      this.slidesContainer = this._velm\r\n        .query(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n\r\n        return false\r\n      }\r\n      this.titleElement = this._velm.query(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this._velm.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this._velm.on(this.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this._velm.show();\r\n      this.initSlides()\r\n      this._velm.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options, options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n\r\n    }\r\n  });\r\n\r\n\r\n  plugins.register(Slidable);\r\n\r\n  /*\r\n  Gallery.installAddon(\"views\", {\r\n    \"name\": \"slider\",\r\n    \"ctor\": SliderView,\r\n    \"templates\": {\r\n      \"default\": '<div class=\"slides\"></div>' +\r\n        '<h3 class=\"title\"></h3>' +\r\n        '<a class=\"prev\">‹</a>' +\r\n        '<a class=\"next\">›</a>' +\r\n        '<a class=\"close\">×</a>' +\r\n        '<a class=\"play-pause\"></a>' +\r\n        '<ol class=\"indicator\"></ol>'\r\n\r\n    }\r\n  });\r\n  */\r\n\r\n  return lists.Slidable = Slidable;\r\n});\n define('skylark-domx-plugins-lists/Tiler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./Group\"\r\n],function(langx,$,elmx,plugins,lists,Group){\r\n\r\n\r\n  var Tiler = Group.inherit({\r\n    klassName : \"Tiler\",\r\n\r\n    pluginName : \"domx.plugins.lists.tiler\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        viewClass: \"repeater-tile\",\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail\"><img height=\"75\" src=\"<%= href %>\" width=\"65\"><span><%= title %></span></div>'\r\n        },\r\n        renderItem : null\r\n    },\r\n\r\n    _construct: function (elm, options) {\r\n      this.overrided(elm, options);\r\n\r\n      this._renderItem = langx.template(this.options.item.template);\r\n\r\n      for (var i=0;i<options.items.length;i++) {\r\n        var itemHtml = this._renderItem(options.items[i]);\r\n        this._velm.append($(itemHtml));\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Tiler);\r\n\r\n  return lists.Tiler = Tiler;\t\r\n});\n define('skylark-domx-plugins-lists/Tree',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n\r\n  var Cascade = _MultitierList.inherit({\r\n    klassName : \"Tree\",\r\n\r\n    pluginName : \"domx.plugins.lists.tree\"\r\n  });\r\n\r\n\r\n  plugins.register(Cascade);\r\n\r\n  return lists.Cascade = Cascade;\t\r\n});\ndefine('skylark-domx-plugins-lists/main',[\r\n    \"./lists\",\r\n    \"./Foldable\",\r\n    \"./Cascadable\",\r\n    \"./Group\",\r\n    \"./Slidable\",\r\n    \"./Tiler\",\r\n    \"./Tree\"\r\n], function(lists) {\r\n    return lists;\r\n});\ndefine('skylark-domx-plugins-lists', ['skylark-domx-plugins-lists/main'], function (main) { return main; });\n\n"]}