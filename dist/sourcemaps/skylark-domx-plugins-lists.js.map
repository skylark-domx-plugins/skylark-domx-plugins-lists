{"version":3,"sources":["skylark-domx-plugins-lists.js"],"names":["define","skylark","attach","langx","$","elmx","plugins","lists","Group","Plugin","inherit","klassName","pluginName","options","multiSelect","classes","active","selectors","item","template","checkable","icon","text","selected","state","Object","_construct","elm","this","overrided","self","velm","_velm","_elm","itemSelector","_$items","on","veItem","hasClass","value","data","undefined","index","_refresh","updates","findItem","valueOrIdx","isNumber","eq","filter","oldValue","removeClass","addClass","selectOneItem","register","Collapsable","_MultitierList","multitier","mode","levels","children","hasChildren","toggler","collapsed","expanded","multiExpand","childrenSelector","togglerSelector","has","find","e","preventDefault","scall","closest","siblings","plugin","toggleClass","toggle","not","Foldable","Cascadable","noder","Slidable","container","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","controlsClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","event","onopen","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","console","window","log","support","element","prop","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","end","prefix","MozTransition","OTransition","transition","hasOwnProperty","style","name","elementTests","translateZ","body","appendChild","slice","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","gallery","list","items","num","length","initStartIndex","initWidget","initEventListeners","ontransitionend","play","createIndicator","obj","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","title","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","indicators","push","setActiveIndicator","activeIndicator","slide","to","speed","clearTimeout","timeout","direction","naturalDirection","diff","circle","Math","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","next","time","that","interval","elements","setTimeout","animationFrameId","call","pause","add","i","concat","Array","prototype","addSlide","positionSlide","initSlides","resetSlides","empty","unloadAllSlides","slides","handleClose","destroyEventListeners","display","overflow","bodyOverflowStyle","close","closeHandler","target","off","dist","translateX","x","y","translateY","from","start","Date","getTime","timer","setInterval","timeElap","left","clearInterval","floor","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","keyCode","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","className","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","firstChild","alt","createTextNode","func","args","wait","apply","callback","renderItem","loadElement","proxyListener","limit","min","j","unloadSlide","slidePrototype","width","reload","imagePrototype","elementPrototype","clientWidth","len","parseInt","getAttribute","handleOpen","first","openHandler","initOptions","mixin","SliderView","Tiler","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","viewClass","_renderItem","itemHtml","append","Cascade","main"],"mappings":";;;;;;;g4BAAAA,EAAA,oCACA,yBACA,SAAAC,GACA,OAAAA,EAAAC,OAAA,2BAEAF,EAAA,oCACA,sBACA,qBACA,oBACA,uBACA,WACA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAAF,EAAAG,OAAAC,SACAC,UAAA,QAEAC,WAAA,2BAEAC,SACAC,aAAA,EAEAC,SACAC,OAAA,UAIAC,WACAC,KAAA,MAIAA,MACAC,SAAA,6EACAC,WAAA,EACAH,WACAI,KAAA,cACAC,KAAA,gBAIAC,SAAA,GAGAC,OACAD,SAAAE,QAGAC,WAAA,SAAAC,EAAAd,GACAe,KAAAC,UAAAF,EAAAd,GACA,IAAAiB,EAAAF,KACAG,EAAAH,KAAAI,MAAA3B,EAAAuB,KAAAK,MACAC,EAAAN,KAAAf,QAAAI,UAAAC,KAEAU,KAAAO,QAAAJ,EAAA3B,EAAA8B,GAEAH,EAAAK,GAAA,QAAAF,EAAA,WACA,IAAAG,EAAAhC,EAAAuB,MAEA,IAAAS,EAAAC,SAAA,YAAA,CACA,IAAAC,EAAAF,EAAAG,KAAA,cACAC,IAAAF,IACAA,EAAAT,EAAAK,QAAAO,MAAAd,OAEAE,EAAAP,SAAAgB,EAIA,OAAA,IAEAX,KAAAL,SAAAK,KAAAf,QAAAU,UAIAoB,SAAA,SAAAC,GACAhB,KAAAC,UAAAe,GACA,IAAAd,EAAAF,KAEA,SAAAiB,EAAAC,GA1EA,OA4EA3C,EAAA4C,SAAAD,GACAhB,EAAAK,QAAAa,GAAAF,GA/EAhB,EAAAK,QAAAc,OAAA,gBAAAH,EAAA,MAaAF,EAAA,WACAhB,KAAAf,QAAAC,cAJA+B,EAMAD,EAAA,SAAAM,UANAC,YAAArB,EAAAjB,QAAAE,QAAAC,QALA,SAAA8B,GACAD,EAAAC,GAAAM,SAAAtB,EAAAjB,QAAAE,QAAAC,QAWAqC,CAAAT,EAAA,SAAAL,YAWA,OAFAjC,EAAAgD,SAAA9C,GAEAD,EAAAC,MAAAA,IAOAR,EAAA,6CACA,sBACA,qBACA,oBACA,uBACA,2CACA,UACA,WACA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAiD,EAAAhD,EAAAC,GAEA,IAAAgD,EAAAhD,EAAAE,SACAC,UAAA,iBAEAE,SACA4C,WACAC,KAAA,GACAC,OAAA,EACA1C,WACA2C,SAAA,KACAC,YAAA,WACAC,QAAA,QAEA/C,SACAgD,UAAA,GACAC,SAAA,IAGAC,aAAA,IAIAzC,OACAD,SAAAE,QAGAC,WAAA,SAAAC,EAAAd,GACAe,KAAAC,UAAAF,EAAAd,GACA,IACAqB,EAAAN,KAAAf,QAAAI,UAAAC,KAIAgD,GAFAtC,KAAAf,QAAA4C,UAAAC,KACA9B,KAAAf,QAAA4C,UAAAxC,UAAA4C,YACAjC,KAAAf,QAAA4C,UAAAxC,UAAA2C,UAGAK,EARArC,KAQAf,QAAA4C,UAAAQ,YACAE,EATAvC,KASAf,QAAA4C,UAAAxC,UAAA6C,QAEAlC,KAAAO,QAAAiC,IAAAF,GAAAG,KAAAF,GAAA/B,GAAA,SAAAR,KAAAhB,WAAA,SAAA0D,GACAA,EAAAC,iBAEAN,GACA9D,EAAAqE,MAAApE,EAAAwB,MAAA6C,QAAAvC,GAAAwC,WAAAvB,YAAA,UAAAS,SAAAM,EAAA,OAAAS,OAAA,4BAAA,QAEAvE,EAAAwB,MAAA6C,QAAAvC,GAAA0C,YAAA,UAAAhB,SAAAM,GAAAS,OAAA,4BAAAE,WAGAjD,KAAAO,QAAAc,OAAA,WAAAmB,IAAAF,GAAAN,SAAAM,GAAAd,SAAA,eACAxB,KAAAO,QAAA2C,IAAA,WAAAV,IAAAF,GAAAN,SAAAM,GAAAd,SAAA,eAMA,OAAA7C,EAAAiD,eAAAA,IAOAxD,EAAA,uCACA,sBACA,qBACA,oBACA,uBACA,UACA,oBACA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAiD,GAEA,IAAAuB,EAAAvB,EAAA9C,SACAC,UAAA,WAEAC,WAAA,gCAMA,OAFAN,EAAAgD,SAAAyB,GAEAxE,EAAAwE,SAAAA,IAGA/E,EAAA,yCACA,sBACA,qBACA,oBACA,uBACA,UACA,oBACA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAiD,GAGA,IAAAwB,EAAAxB,EAAA9C,SACAC,UAAA,aAEAC,WAAA,kCAMA,OAFAN,EAAAgD,SAAA0B,GAEAzE,EAAAyE,WAAAA,IAEAhF,EAAA,uCACA,sBACA,qBACA,qBACA,uBACA,WACA,SAAAG,EAAA8E,EAAA7E,EAAAE,EAAAC,GACA,aACA,IAAA2E,EAAA5E,EAAAG,OAAAC,SACAC,UAAA,WAEAC,WAAA,8BAEAC,SAEAsE,UAAA,KAEAC,gBAAA,MAEAC,aAAA,KAEAC,aAAA,6BAEAC,YAAA,4BAEAC,cAAA,0BAEAC,eAAA,2BAEAC,aAAA,6BAGAC,cAAA,8BAGAC,WAAA,QAEAC,kBAAA,gBAEAC,gBAAA,cAEAC,kBAAA,gBAEAnB,YAAA,SAEAoB,UAAA,OAEAC,UAAA,OAEAC,WAAA,QAEAC,eAAA,aAaAC,mBAAA,EAGAC,aAAA,EAQAC,wBAAA,EAEAC,4BAAA,EAEAC,wBAAA,EAEAC,0BAAA,EAEAC,eAAA,EAEAC,mBAAA,EAEAC,sBAAA,EAEAC,oBAAA,EAEAC,4BAAA,EAEAC,oBAAA,EAEAC,eAAA,EAEAC,UAAA,EAGAC,YAAA,EAEAC,gBAAA,EAEAC,gBAAA,EAEAC,kBAAA,IAIA3E,MAAA,EAEA4E,aAAA,EAEAC,gBAAA,IAGAC,8BAAA/E,EAIAsE,oBAAA,EAGAU,mBAAA,KAEAC,qBAAA,SAGAC,kBAAA,YAEAC,qBAAA,EAMAC,WAAApF,EAGAqF,YAAArF,EAIAsF,cAAAtF,EAIAuF,aAAAvF,EAIAwF,gBAAAxF,EAIAyF,qBAAAzF,EAGA0F,aAAA1F,EAIA2F,cAAA3F,GAiBA4F,QAAAC,OAAAD,SAAA,mBAAAC,OAAAD,QAAAE,IACAD,OAAAD,SACAE,IAAA,cAIAC,QAAA,SAAAC,GACA,IAsBAC,EAtBAF,GACAG,WAAAlG,IAAA6F,OAAAM,cACAN,OAAAO,eAAAC,oBAAAD,eAEAE,GACAC,kBACAC,IAAA,sBACAC,OAAA,YAEAC,eACAF,IAAA,gBACAC,OAAA,SAEAE,aACAH,IAAA,iBACAC,OAAA,OAEAG,YACAJ,IAAA,gBACAC,OAAA,KAIA,IAAAR,KAAAK,EACA,GACAA,EAAAO,eAAAZ,SACAjG,IAAAgG,EAAAc,MAAAb,GACA,CACAF,EAAAa,WAAAN,EAAAL,GACAF,EAAAa,WAAAG,KAAAd,EACA,MAIA,SAAAe,IACA,IACAf,EACAgB,EAFAL,EAAAb,EAAAa,WAGAP,SAAAa,KAAAC,YAAAnB,GACAY,IACAX,EAAAW,EAAAG,KAAAK,MAAA,GAAA,GAAA,gBACApH,IAAAgG,EAAAc,MAAAb,KACAD,EAAAc,MAAAb,GAAA,gBACAgB,EAAApB,OACAwB,iBAAArB,GACAsB,iBAAAV,EAAAH,OAAA,aACAV,EAAAwB,WACAd,OAAAG,EAAAH,OACAM,KAAAd,EACAuB,WAAA,EACAP,aAAAA,GAAA,SAAAA,UAIAjH,IAAAgG,EAAAc,MAAAW,iBACA1B,EAAA0B,kBACAzB,EAAAc,MAAAW,eAAA,UACA1B,EAAA0B,eAAAC,QAGA,YAFA7B,OACAwB,iBAAArB,GACAsB,iBAAA,mBACAtB,EAAAc,MAAAW,eAAA,QACA1B,EAAA0B,eAAAE,MAGA,UAFA9B,OACAwB,iBAAArB,GACAsB,iBAAA,oBAEAjB,SAAAa,KAAAU,YAAA5B,GAOA,OALAK,SAAAa,KACAF,IAEArJ,EAAA0I,UAAA1G,GAAA,mBAAAqH,GAEAjB,EA3EA,CA8EAM,SAAAwB,cAAA,QAEAC,sBAAAjC,OAAAiC,uBACAjC,OAAAkC,6BACAlC,OAAAmC,yBAEAC,qBAAApC,OAAAoC,sBACApC,OAAAqC,mCACArC,OAAAsC,4BACAtC,OAAAuC,wBAEAnJ,WAAA,SAAAoJ,EAAAjK,GAQA,GAPAe,KAAAC,UAAAiJ,EAAAjK,GAEAe,KAAAmJ,KAAAnJ,KAAAf,QAAAmK,MACApJ,KAAAf,QAAAsE,UAAAvD,KAAAD,MACAC,KAAAqJ,IAAArJ,KAAAmJ,KAAAG,OAEAtJ,KAAAuJ,kBACA,IAAAvJ,KAAAwJ,aACA,OAAA,EAEAxJ,KAAAyJ,qBAEAzJ,KAAAoG,QAAApG,KAAAc,OAEAd,KAAA0J,kBAEA1J,KAAAf,QAAAuG,gBACAxF,KAAA2J,QAIAC,gBAAA,SAAAC,GACA7J,KAAAkJ,QAAA,IAIAY,EACAC,EAJAC,EAAAhK,KAAAiK,mBAAAC,WAAA,GACAC,EAAAN,EAAAM,MACApE,EAAA/F,KAAAf,QAAA8G,kBAoBA,OAjBA/F,KAAAf,QAAA+G,sBACAD,IACA+D,EAAAD,EAAA9D,SAEAlF,IAAAiJ,IACAC,EAAAF,EAAAO,sBAAA5L,EAAAqL,GAAApH,KAAA,OAAA,MAEAqH,EAAAC,EAAAM,KAGAP,IACAE,EAAArC,MAAA2C,gBAAA,QAAAR,EAAA,OAGAK,IACAH,EAAAG,MAAAA,GAEAH,GAGAO,aAAA,SAAAzJ,GACA,GAAAd,KAAA6F,mBAAAyD,OAAA,CACA,IAAAU,EAAAhK,KAAA4J,gBAAA5J,KAAAmJ,KAAArI,IACAkJ,EAAAQ,aAAA,aAAA1J,GACAd,KAAA6F,mBAAA,GAAAmC,YAAAgC,GACAhK,KAAAyK,WAAAC,KAAAV,KAIAW,mBAAA,SAAA7J,GACAd,KAAAyK,aACAzK,KAAA4K,iBACA5K,KAAA4K,gBAAArJ,YAAAvB,KAAAf,QAAA6G,sBAEA9F,KAAA4K,gBAAApM,EAAAwB,KAAAyK,WAAA3J,IACAd,KAAA4K,gBAAApJ,SAAAxB,KAAAf,QAAA6G,wBAIA+E,MAAA,SAAAC,EAAAC,GACArE,OAAAsE,aAAAhL,KAAAiL,SACA,IACAC,EACAC,EACAC,EAHAtK,EAAAd,KAAAc,MAIA,GAAAA,IAAAgK,GAAA,IAAA9K,KAAAqJ,IAAA,CAMA,GAHA0B,IACAA,EAAA/K,KAAAf,QAAA0G,iBAEA3F,KAAA4G,QAAAwB,UAAA,CAkBA,IAjBApI,KAAAf,QAAAqG,aACAwF,EAAA9K,KAAAqL,OAAAP,IAGAI,EAAAI,KAAAC,IAAAzK,EAAAgK,IAAAhK,EAAAgK,GAEA9K,KAAAf,QAAAqG,aACA6F,EAAAD,GACAA,GAAAlL,KAAAwL,UAAAxL,KAAAqL,OAAAP,IAAA9K,KAAAyL,cAGAN,IACAL,GAAAI,EAAAlL,KAAAqJ,IAAAyB,IAGAM,EAAAE,KAAAC,IAAAzK,EAAAgK,GAAA,EAEAM,GACAA,GAAA,EACApL,KAAA0L,KACA1L,KAAAqL,QAAAP,EAAAhK,EAAAgK,EAAAhK,GAAAsK,EAAA,GACApL,KAAAyL,WAAAP,EACA,GAGAJ,EAAA9K,KAAAqL,OAAAP,GACA9K,KAAA0L,KAAA5K,EAAAd,KAAAyL,WAAAP,EAAAH,GACA/K,KAAA0L,KAAAZ,EAAA,EAAAC,GACA/K,KAAAf,QAAAqG,YACAtF,KAAA0L,KACA1L,KAAAqL,OAAAP,EAAAI,IACAlL,KAAAyL,WAAAP,EACA,QAIAJ,EAAA9K,KAAAqL,OAAAP,GACA9K,KAAA2L,QAAA7K,GAAAd,KAAAyL,WAAAX,GAAA9K,KAAAyL,WAAAV,GAEA/K,KAAAoG,QAAA0E,KAGAc,SAAA,WACA,OAAA5L,KAAAc,OAGA+K,UAAA,WACA,OAAA7L,KAAAqJ,KAGAyC,KAAA,YACA9L,KAAAf,QAAAqG,YAAAtF,KAAAc,QACAd,KAAA6K,MAAA7K,KAAAc,MAAA,IAIAiL,KAAA,YACA/L,KAAAf,QAAAqG,YAAAtF,KAAAc,MAAAd,KAAAqJ,IAAA,IACArJ,KAAA6K,MAAA7K,KAAAc,MAAA,IAIA6I,KAAA,SAAAqC,GACA,IAAAC,EAAAjM,KACA0G,OAAAsE,aAAAhL,KAAAiL,SACAjL,KAAAkM,SAAAF,GAAAhM,KAAAf,QAAAwG,kBACAzF,KAAAmM,SAAAnM,KAAAc,OAAA,IACAd,KAAAiL,QAAAjL,KAAAoM,YACApM,KAAA2I,uBAAA3I,KAAA6K,OACA,SAAAC,EAAAC,GACAkB,EAAAI,iBAAAJ,EAAAtD,sBAAA2D,KACA5F,OACA,WACAuF,EAAApB,MAAAC,EAAAC,OAIA/K,KAAAc,MAAA,EAAAd,KAAAf,QAAA2G,0BACA5F,KAAAkM,WAGAlM,KAAAuD,UAAA/B,SAAAxB,KAAAf,QAAA6E,eAGAyI,MAAA,WACA7F,OAAAsE,aAAAhL,KAAAiL,SACAjL,KAAAkM,SAAA,KACAlM,KAAA8I,uBACA9I,KAAA8I,qBAAAwD,KAAA5F,OAAA1G,KAAAqM,kBACArM,KAAAqM,iBAAA,MAEArM,KAAAuD,UAAAhC,YAAAvB,KAAAf,QAAA6E,eAGA0I,IAAA,SAAArD,GACA,IAAAsD,EAkBA,IAjBAtD,EAAAuD,SAEAvD,EAAAwD,MAAAC,UAAA3E,MAAAqE,KAAAnD,IAEAnJ,KAAAmJ,KAAAuD,SAEA1M,KAAAmJ,KAAAwD,MAAAC,UAAA3E,MAAAqE,KAAAtM,KAAAmJ,OAEAnJ,KAAAmJ,KAAAnJ,KAAAmJ,KAAAuD,OAAAvD,GACAnJ,KAAAqJ,IAAArJ,KAAAmJ,KAAAG,OACAtJ,KAAAqJ,IAAA,GAAA,OAAArJ,KAAAf,QAAAqG,aACAtF,KAAAf,QAAAqG,YAAA,EACAtF,KAAAuD,UAAAhC,YAAAvB,KAAAf,QAAA2E,gBAEA5D,KAAAuD,UACAhC,YAAAvB,KAAAf,QAAA4E,gBACAtC,YAAAvB,KAAAf,QAAA0E,aACA8I,EAAAzM,KAAAqJ,IAAAF,EAAAG,OAAAmD,EAAAzM,KAAAqJ,IAAAoD,GAAA,EACAzM,KAAA6M,SAAAJ,GACAzM,KAAA8M,cAAAL,GAEAzM,KAAAwL,UAAAlC,OAAAtJ,KAAAqJ,IACArJ,KAAA+M,YAAA,IAGAC,YAAA,WACAhN,KAAAwD,gBAAAyJ,QACAjN,KAAAkN,kBACAlN,KAAAmN,UACAnN,KAAA6F,mBAAAoH,QACAjN,KAAAyK,eAIA2C,YAAA,WACApN,KAAA4K,iBACA5K,KAAA4K,gBAAArJ,YAAAvB,KAAAf,QAAA6G,sBAGA,IAAA7G,EAAAe,KAAAf,QACAe,KAAAqN,wBAEArN,KAAAuM,QACAvM,KAAAuD,UAAA,GAAAoE,MAAA2F,QAAA,OACAtN,KAAAuD,UACAhC,YAAAtC,EAAAyE,cACAnC,YAAAtC,EAAA0E,aACApC,YAAAtC,EAAA2E,eACArC,YAAAtC,EAAA4E,gBACA5E,EAAAkG,qBACA+B,SAAAa,KAAAJ,MAAA4F,SAAAvN,KAAAwN,mBAEAxN,KAAAf,QAAAwF,aACAzE,KAAAgN,cAEAhN,KAAAf,QAAAuH,UACAxG,KAAAf,QAAAuH,SAAA8F,KAAAtM,OAIAyN,MAAA,WACA,IAAAxB,EAAAjM,KAQAA,KAAAf,QAAAsH,SACAvG,KAAAf,QAAAsH,QAAA+F,KAAAtM,MAEAA,KAAA4G,QAAAa,YAAAzH,KAAAf,QAAAuF,mBACAxE,KAAAuD,UAAA/C,GAAAR,KAAA4G,QAAAa,WAAAJ,IAVA,SAAAqG,EAAAzH,GACAA,EAAA0H,SAAA1B,EAAA1I,UAAA,KACA0I,EAAA1I,UAAAqK,IAAA3B,EAAArF,QAAAa,WAAAJ,IAAAqG,GACAzB,EAAAmB,iBAQApN,KAAAuD,UAAAhC,YAAAvB,KAAAf,QAAAyE,eAEA1D,KAAAoN,eAIA/B,OAAA,SAAAvK,GAEA,OAAAd,KAAAqJ,IAAAvI,EAAAd,KAAAqJ,KAAArJ,KAAAqJ,KAGAqC,KAAA,SAAA5K,EAAA+M,EAAA9C,GACA/K,KAAA8N,WAAAhN,EAAA+M,EAAA9C,GACA/K,KAAAwL,UAAA1K,GAAA+M,GAGAxF,UAAA,SAAAvH,EAAAiN,EAAAC,EAAAjD,GACA,IAAApD,EAAA3H,KAAAmN,OAAArM,GAAA6G,MACAF,EAAAzH,KAAA4G,QAAAa,WACAW,EAAApI,KAAA4G,QAAAwB,UACAT,EAAAF,EAAAG,KAAA,YAAAmD,EAAA,KACApD,EAAAS,EAAAR,MACA,aACAmG,EACA,OACAC,EACA,OACA5F,EAAAN,WAAA,iBAAA,KAGAgG,WAAA,SAAAhN,EAAAiN,EAAAhD,GACA/K,KAAAqI,UAAAvH,EAAAiN,EAAA,EAAAhD,IAGAkD,WAAA,SAAAnN,EAAAkN,EAAAjD,GACA/K,KAAAqI,UAAAvH,EAAA,EAAAkN,EAAAjD,IAGAY,QAAA,SAAAuC,EAAApD,EAAAC,GACA,GAAAA,EAIA,IAAAkB,EAAAjM,KACAmO,GAAA,IAAAC,MAAAC,UACAC,EAAA5H,OAAA6H,YAAA,WACA,IAAAC,GAAA,IAAAJ,MAAAC,UAAAF,EACA,GAAAK,EAAAzD,EAIA,OAHAkB,EAAAzI,gBAAA,GAAAmE,MAAA8G,KAAA3D,EAAA,KACAmB,EAAAvC,uBACAhD,OAAAgI,cAAAJ,GAGArC,EAAAzI,gBAAA,GAAAmE,MAAA8G,MACA3D,EAAAoD,IAAA5C,KAAAqD,MAAAH,EAAAzD,EAAA,KAAA,KAAAmD,EAAA,MACA,QAfAlO,KAAAwD,gBAAA,GAAAmE,MAAA8G,KAAA3D,EAAA,MAkBAnI,eAAA,SAAAsD,GACAA,EAAAtD,eACAsD,EAAAtD,iBAEAsD,EAAA2I,aAAA,GAIAC,gBAAA,SAAA5I,GACAA,EAAA4I,gBACA5I,EAAA4I,kBAEA5I,EAAA6I,cAAA,GAIAC,SAAA,WACA/O,KAAA+M,YAAA,IAGAiC,YAAA,SAAA/I,GAIAA,EAAAgJ,OACA,IAAAhJ,EAAAgJ,OACA,UAAAhJ,EAAA0H,OAAAuB,UACA,UAAAjJ,EAAA0H,OAAAuB,WAIAjJ,EAAAtD,kBACAsD,EAAAkJ,eAAAlJ,GAAAmJ,UACAC,MAAApJ,EAAAoJ,MACAC,MAAArJ,EAAAqJ,QAEAtP,KAAAgH,aAAAf,KAIAsJ,YAAA,SAAAtJ,GACAjG,KAAAwP,cACAvJ,EAAAkJ,eAAAlJ,GAAAmJ,UACAC,MAAApJ,EAAAoJ,MACAC,MAAArJ,EAAAqJ,QAEAtP,KAAAyP,YAAAxJ,KAIAyJ,UAAA,SAAAzJ,GACAjG,KAAAwP,aACAxP,KAAA2P,WAAA1J,UACAjG,KAAAwP,aAIAI,WAAA,SAAA3J,GACA,GAAAjG,KAAAwP,WAAA,CACA,IAAA7B,EAAA1H,EAAA0H,OACAkC,EAAA5J,EAAA6J,cACAD,IAAAA,IAAAlC,GAAAtK,EAAA0M,SAAApC,EAAAkC,KACA7P,KAAA0P,UAAAzJ,KAKAe,aAAA,SAAAf,GACAjG,KAAAf,QAAAiG,4BACAlF,KAAA6O,gBAAA5I,GAIA,IAAAmJ,GAAAnJ,EAAAkJ,eAAAlJ,GAAAmJ,QAAA,GACApP,KAAAwP,YAEAzB,EAAAqB,EAAAC,MACArB,EAAAoB,EAAAE,MAEAtD,KAAAoC,KAAA4B,OAGAhQ,KAAAiQ,iBAAApP,EAEAb,KAAAkQ,eAGAT,YAAA,SAAAxJ,GACAjG,KAAAf,QAAAiG,4BACAlF,KAAA6O,gBAAA5I,GAIA,IAGAkK,EACAC,EAJAhB,GAAAnJ,EAAAkJ,eAAAlJ,GAAAmJ,QAAA,GACAiB,GAAApK,EAAAkJ,eAAAlJ,GAAAoK,MACAvP,EAAAd,KAAAc,MAIA,KAAAsO,EAAA9F,OAAA,GAAA+G,GAAA,IAAAA,GAkBA,GAfArQ,KAAAf,QAAAmG,eACAa,EAAAtD,iBAGA3C,KAAAkQ,YACAnC,EAAAqB,EAAAC,MAAArP,KAAAwP,WAAAzB,EACAC,EAAAoB,EAAAE,MAAAtP,KAAAwP,WAAAxB,GAEAmC,EAAAnQ,KAAAkQ,WAAAnC,OAEAlN,IAAAb,KAAAiQ,cACAjQ,KAAAiQ,YACAjQ,KAAAiQ,aACA3E,KAAAC,IAAA4E,GAAA7E,KAAAC,IAAAvL,KAAAkQ,WAAAlC,IAEAhO,KAAAiQ,YA6BAjQ,KAAAiO,WAAAnN,EAAAd,KAAAkQ,WAAAlC,EAAAhO,KAAAwL,UAAA1K,GAAA,QALA,IAtBAmF,EAAAtD,iBAEA+D,OAAAsE,aAAAhL,KAAAiL,SACAjL,KAAAf,QAAAqG,WACA8K,GAAApQ,KAAAqL,OAAAvK,EAAA,GAAAA,EAAAd,KAAAqL,OAAAvK,EAAA,KAIAd,KAAAkQ,WAAAnC,EAAAoC,IAEArP,GAAAqP,EAAA,GACArP,IAAAd,KAAAqJ,IAAA,GAAA8G,EAAA,EACA7E,KAAAC,IAAA4E,GAAAnQ,KAAAyL,WAAA,EACA,EACA2E,GAAAtP,GACAA,GACAsP,EAAA1F,KAAA5J,EAAA,GAEAA,EAAAd,KAAAqJ,IAAA,GACA+G,EAAAE,QAAAxP,EAAA,IAGAsP,EAAA9G,QACAxI,EAAAsP,EAAAG,MACAvQ,KAAA8N,WAAAhN,EAAAqP,EAAAnQ,KAAAwL,UAAA1K,GAAA,IAOA6O,WAAA,SAAA1J,GACAjG,KAAAf,QAAAiG,4BACAlF,KAAA6O,gBAAA5I,GAEA,IAgBAiF,EACAsF,EACAC,EACAC,EACAC,EApBA7P,EAAAd,KAAAc,MACAiK,EAAA/K,KAAAf,QAAA0G,gBACA8F,EAAAzL,KAAAyL,WACAmF,EAAAC,OAAAzC,KAAA4B,MAAAhQ,KAAAwP,WAAAxD,MAAA,IAEA8E,EACAF,GAAAtF,KAAAC,IAAAvL,KAAAkQ,WAAAnC,GAAA,IACAzC,KAAAC,IAAAvL,KAAAkQ,WAAAnC,GAAAtC,EAAA,EAEAsF,GACAjQ,GAAAd,KAAAkQ,WAAAnC,EAAA,GACAjN,IAAAd,KAAAqJ,IAAA,GAAArJ,KAAAkQ,WAAAnC,EAAA,EACAiD,GAAAF,GACA9Q,KAAAf,QAAA+F,uBACA4L,GAAAtF,KAAAC,IAAAvL,KAAAkQ,WAAAlC,GAAA,IACA1C,KAAAC,IAAAvL,KAAAkQ,WAAAlC,GAAAhO,KAAAiR,YAAA,GAMAjR,KAAAf,QAAAqG,aACAyL,GAAA,GAGA7F,EAAAlL,KAAAkQ,WAAAnC,EAAA,GAAA,EAAA,EACA/N,KAAAiQ,YAqCAe,EACAhR,KAAAyN,QAGAzN,KAAAiO,WAAAnN,EAAA,EAAAiK,GAxCA+F,IAAAC,GACAP,EAAA1P,EAAAoK,EACAuF,EAAA3P,EAAAoK,EACAwF,EAAAjF,EAAAP,EACAyF,GAAAlF,EAAAP,EACAlL,KAAAf,QAAAqG,YACAtF,KAAA0L,KAAA1L,KAAAqL,OAAAmF,GAAAE,EAAA,GACA1Q,KAAA0L,KAAA1L,KAAAqL,OAAAvK,EAAA,EAAAoK,GAAAyF,EAAA,IACAH,GAAA,GAAAA,EAAAxQ,KAAAqJ,KACArJ,KAAA0L,KAAA8E,EAAAE,EAAA,GAEA1Q,KAAA0L,KAAA5K,EAAAd,KAAAwL,UAAA1K,GAAA4P,EAAA3F,GACA/K,KAAA0L,KACA1L,KAAAqL,OAAAoF,GACAzQ,KAAAwL,UAAAxL,KAAAqL,OAAAoF,IAAAC,EACA3F,GAEAjK,EAAAd,KAAAqL,OAAAoF,GACAzQ,KAAAoG,QAAAtF,IAGAd,KAAAf,QAAAqG,YACAtF,KAAA0L,KAAA1L,KAAAqL,OAAAvK,EAAA,IAAA2K,EAAAV,GACA/K,KAAA0L,KAAA5K,EAAA,EAAAiK,GACA/K,KAAA0L,KAAA1L,KAAAqL,OAAAvK,EAAA,GAAA2K,EAAAV,KAEAjK,GACAd,KAAA0L,KAAA5K,EAAA,GAAA2K,EAAAV,GAEA/K,KAAA0L,KAAA5K,EAAA,EAAAiK,GACAjK,EAAAd,KAAAqJ,IAAA,GACArJ,KAAA0L,KAAA5K,EAAA,EAAA2K,EAAAV,KAcAmG,cAAA,SAAAjL,GACAjG,KAAAwP,aACAxP,KAAA2P,WAAA1J,UACAjG,KAAAwP,aAIA9F,gBAAA,SAAAzD,GACA,IAAA4E,EAAA7K,KAAAmN,OAAAnN,KAAAc,OACAmF,GAAA4E,IAAA5E,EAAA0H,SACA3N,KAAAkM,UACAlM,KAAA2J,OAEA3J,KAAAoM,WAAApM,KAAAf,QAAAoH,YAAArG,KAAAc,MAAA+J,MAIAsG,WAAA,SAAAlL,GACA,IAEAnF,EAFA6M,EAAA1H,EAAA0H,QAAA1H,EAAAmL,WACAC,EAAA1D,GAAAA,EAAA2D,WAEA3D,GAAA0D,IAGAvQ,EAAAd,KAAAuR,aAAAF,GACA7S,EAAA6S,GAAA9P,YAAAvB,KAAAf,QAAAgF,mBACA,UAAAgC,EAAAuL,MACAhT,EAAA6S,GAAA7P,SAAAxB,KAAAf,QAAAiF,iBACAlE,KAAAmM,SAAArL,GAAA,GAEAd,KAAAmM,SAAArL,GAAA,EAGA6M,EAAA8D,aAAAzR,KAAAuD,UAAA,GAAAkO,eACA9D,EAAAhG,MAAA+J,UAAA1R,KAAAuD,UAAA,GAAAkO,cAEAzR,KAAAkM,UAAAlM,KAAAmN,OAAAnN,KAAAc,SAAAuQ,GACArR,KAAA2J,OAEA3J,KAAAoM,WAAApM,KAAAf,QAAAqH,iBAAAxF,EAAAuQ,MAGAM,OAAA,SAAA1L,GACAjG,KAAAmR,WAAAlL,IAGA2L,QAAA,SAAA3L,GACAjG,KAAAmR,WAAAlL,IAGA4L,UAAA,SAAA5L,GACA,OAAAA,EAAAgJ,OAAAhJ,EAAA6L,SACA,KAAA,GACA9R,KAAAf,QAAAyF,yBACA1E,KAAA2C,eAAAsD,GACAjG,KAAA+R,kBAEA,MACA,KAAA,GACA/R,KAAAf,QAAA6F,gBACA9E,KAAAyN,QAEAxH,EAAA+L,4BAEA,MACA,KAAA,GACAhS,KAAAf,QAAA2F,yBACA5E,KAAA2C,eAAAsD,GACAjG,KAAAiS,mBAEA,MACA,KAAA,GACAjS,KAAAf,QAAA4F,2BACA7E,KAAA2C,eAAAsD,GACAjG,KAAA8L,QAEA,MACA,KAAA,GACA9L,KAAAf,QAAA4F,2BACA7E,KAAA2C,eAAAsD,GACAjG,KAAA+L,UAMAmG,YAAA,SAAAjM,GACA,IAAAhH,EAAAe,KAAAf,QACA0O,EAAA1H,EAAA0H,QAAA1H,EAAAmL,WACAC,EAAA1D,EAAA2D,WAEA,GAAAD,IAAArR,KAAA6F,mBAAA,GAIA,OAFA7F,KAAA2C,eAAAsD,QACAjG,KAAA6K,MAAA7K,KAAAuR,aAAA5D,IAEA,GAAA0D,EAAAC,aAAAtR,KAAA6F,mBAAA,GAIA,OAFA7F,KAAA2C,eAAAsD,QACAjG,KAAA6K,MAAA7K,KAAAuR,aAAAF,IAKA,SAAAc,EAAAC,GACA,OAAA5T,EAAAmP,GAAAjN,SAAA0R,IAAA5T,EAAA6S,GAAA3Q,SAAA0R,GAEAD,EAAAlT,EAAA+D,cAEAhD,KAAA2C,eAAAsD,GACAjG,KAAA+R,kBACAI,EAAAlT,EAAAmF,YAEApE,KAAA2C,eAAAsD,GACAjG,KAAA8L,QACAqG,EAAAlT,EAAAoF,YAEArE,KAAA2C,eAAAsD,GACAjG,KAAA+L,QACAoG,EAAAlT,EAAAqF,aAEAtE,KAAA2C,eAAAsD,GACAjG,KAAAyN,SACA0E,EAAAlT,EAAAsF,iBAEAvE,KAAA2C,eAAAsD,GACAjG,KAAAiS,mBACAZ,IAAArR,KAAAwD,gBAAA,GAEAvE,EAAA8F,mBACA/E,KAAA2C,eAAAsD,GACAjG,KAAAyN,SACAxO,EAAA0F,6BACA3E,KAAA2C,eAAAsD,GACAjG,KAAA+R,kBAGAV,EAAAC,YACAD,EAAAC,aAAAtR,KAAAwD,gBAAA,IAGAvE,EAAA0F,6BACA3E,KAAA2C,eAAAsD,GACAjG,KAAA+R,mBAKAM,QAAA,SAAApM,GACA,KACAjG,KAAAf,QAAAgG,oBACAjF,KAAAkQ,aACA5E,KAAAC,IAAAvL,KAAAkQ,WAAAnC,GAAA,IAAAzC,KAAAC,IAAAvL,KAAAkQ,WAAAlC,GAAA,KAKA,OAAAhO,KAAAkS,YAAAjM,UAHAjG,KAAAkQ,YAMAoC,kBAAA,SAAAxR,GACAA,EAGAd,KAAAuD,UAAAhC,YAAAvB,KAAAf,QAAA2E,eAFA5D,KAAAuD,UAAA/B,SAAAxB,KAAAf,QAAA2E,eAIA9C,IAAAd,KAAAqJ,IAAA,EACArJ,KAAAuD,UAAA/B,SAAAxB,KAAAf,QAAA4E,gBAEA7D,KAAAuD,UAAAhC,YAAAvB,KAAAf,QAAA4E,iBAIA0O,YAAA,SAAAzR,GACAd,KAAAf,QAAAqG,YACAtF,KAAAsS,kBAAAxR,GAEAd,KAAAwS,aAAA1R,GACAd,KAAAf,QAAAsG,gBACAvF,KAAAuF,eAAAzE,GAEAd,KAAAyS,SAAA3R,GACAd,KAAA2K,mBAAA7J,IAGAsF,QAAA,SAAAtF,GACAd,KAAAc,MAAAA,EACAd,KAAAuS,YAAAzR,GACAd,KAAAoM,WAAApM,KAAAf,QAAAmH,SAAAtF,EAAAd,KAAAmN,OAAArM,MAGA2R,SAAA,SAAA3R,GACA,IAAA4R,EAAA1S,KAAAmN,OAAArM,GAAA4R,WACAhT,EAAAgT,EAAAvI,OAAAuI,EAAAC,IACAlP,EAAAzD,KAAAyD,aACAA,EAAA6F,SACAtJ,KAAAyD,aAAAwJ,QACAvN,GACA+D,EAAA,GAAAuE,YAAAd,SAAA0L,eAAAlT,MAKA0M,WAAA,SAAAyG,EAAAC,EAAAC,GACA,IAAA9G,EAAAjM,KACA,OACA6S,GACAnM,OAAA0F,WAAA,WACAyG,EAAAG,MAAA/G,EAAA6G,QACAC,GAAA,IAIArK,cAAA,SAAAmB,EAAAoJ,GACA,IAAApM,EAAA7G,KAAAf,QAAAiU,WAAArJ,EAAAoJ,GAEA,OADAzU,EAAAqI,GAAArF,SAAAxB,KAAAf,QAAAkF,mBACA0C,GAGAsM,YAAA,SAAArS,GACAd,KAAAmM,SAAArL,KACAd,KAAAmN,OAAArM,GAAA4R,WACA1S,KAAAmM,SAAArL,GAAAtC,EAAAwB,KAAAmN,OAAArM,IAAAJ,SACAV,KAAAf,QAAAiF,iBAEA,EACA,GAEAlE,KAAAmM,SAAArL,GAAA,EACAtC,EAAAwB,KAAAmN,OAAArM,IAAAU,SAAAxB,KAAAf,QAAAgF,mBACAjE,KAAAmN,OAAArM,GAAAkH,YACAhI,KAAA0I,cAAA1I,KAAAmJ,KAAArI,GAAAd,KAAAoT,mBAMAZ,aAAA,SAAA1R,GACA,IAEA2L,EAFA4G,EAAA/H,KAAAgI,IAAAtT,KAAAqJ,IAAA,EAAArJ,KAAAf,QAAAyG,aAAA,GACA6N,EAAAzS,EAEA,IAAA2L,EAAA,EAAAA,EAAA4G,EAAA5G,GAAA,EAKA8G,GAAA9G,GAAAA,EAAA,GAAA,GAAA,EAAA,GAGA8G,EAAAvT,KAAAqL,OAAAkI,GACAvT,KAAAmT,YAAAI,IAIAhO,eAAA,SAAAzE,GACA,IAAA2L,EAAArB,EACA,IAAAqB,KAAAzM,KAAAmM,SACAnM,KAAAmM,SAAAzE,eAAA+E,KACArB,EAAAE,KAAAC,IAAAzK,EAAA2L,IAEAzM,KAAAf,QAAAyG,cACA0F,EAAApL,KAAAf,QAAAyG,aAAA1F,KAAAqJ,MAEArJ,KAAAwT,YAAA/G,UACAzM,KAAAmM,SAAAM,KAMAI,SAAA,SAAA/L,GACA,IAAA+J,EAAA7K,KAAAyT,eAAAvJ,WAAA,GACAW,EAAAL,aAAA,aAAA1J,GACAd,KAAAwD,gBAAA,GAAAwE,YAAA6C,GACA7K,KAAAmN,OAAAzC,KAAAG,GACA7K,KAAAuK,aAAAzJ,IAIAgM,cAAA,SAAAhM,GACA,IAAA+J,EAAA7K,KAAAmN,OAAArM,GACA+J,EAAAlD,MAAA+L,MAAA1T,KAAAyL,WAAA,KACAzL,KAAA4G,QAAAwB,YACAyC,EAAAlD,MAAA8G,KAAA3N,GAAAd,KAAAyL,WAAA,KACAzL,KAAA0L,KACA5K,EACAd,KAAAc,MAAAA,GACAd,KAAAyL,WACAzL,KAAAc,MAAAA,EAAAd,KAAAyL,WAAA,EACA,KAKAsB,WAAA,SAAA4G,GAWA,IAAAlP,EAAAgI,EAmBA,IA7BAkH,IACA3T,KAAA6F,mBAAA7F,KAAAuD,UAAAd,KACAzC,KAAAf,QAAA4G,oBAEA7F,KAAA6F,mBAAAyD,SACAtJ,KAAAiK,mBAAA/C,SAAAwB,cAAA,MACA1I,KAAAyK,WAAAzK,KAAA6F,mBAAA,GAAA7D,WAKA2R,IACA3T,KAAAwL,aACAxL,KAAAwL,UAAAlC,OAAAtJ,KAAAqJ,IACArJ,KAAAmM,YACAnM,KAAA4T,eAAA1M,SAAAwB,cAAA,OACA1I,KAAA6T,iBAAA3M,SAAAwB,cAAA,OACA1I,KAAAyT,eAAAvM,SAAAwB,cAAA,OACAlK,EAAAwB,KAAAyT,gBAAAjS,SAAAxB,KAAAf,QAAA+E,YACAhE,KAAAmN,OAAAnN,KAAAwD,gBAAA,GAAAxB,SACAyC,EACAzE,KAAAf,QAAAwF,aAAAzE,KAAAmN,OAAA7D,SAAAtJ,KAAAqJ,KAEArJ,KAAAyL,WAAAzL,KAAAuD,UAAA,GAAAuQ,YACA9T,KAAAiR,YAAAjR,KAAAuD,UAAA,GAAAkO,aACAzR,KAAAwD,gBAAA,GAAAmE,MAAA+L,MAAA1T,KAAAqJ,IAAArJ,KAAAyL,WAAA,KACAhH,GACAzE,KAAAgN,cAEAP,EAAA,EAAAA,EAAAzM,KAAAqJ,IAAAoD,GAAA,EACAhI,GACAzE,KAAA6M,SAAAJ,GAEAzM,KAAA8M,cAAAL,GAGAzM,KAAAf,QAAAqG,YAAAtF,KAAA4G,QAAAwB,YACApI,KAAA0L,KAAA1L,KAAAqL,OAAArL,KAAAc,MAAA,IAAAd,KAAAyL,WAAA,GACAzL,KAAA0L,KAAA1L,KAAAqL,OAAArL,KAAAc,MAAA,GAAAd,KAAAyL,WAAA,IAEAzL,KAAA4G,QAAAwB,YACApI,KAAAwD,gBAAA,GAAAmE,MAAA8G,KACAzO,KAAAc,OAAAd,KAAAyL,WAAA,OAIA+H,YAAA,SAAA1S,GACA,IAAA+J,EAAA6H,EACA7H,EAAA7K,KAAAmN,OAAArM,GAEA,QADA4R,EAAA7H,EAAA6H,aAEA7H,EAAApC,YAAAiK,IAIAxF,gBAAA,WACA,IAAAT,EAAAsH,EACA,IAAAtH,EAAA,EAAAsH,EAAA/T,KAAAmN,OAAA7D,OAAAmD,EAAAsH,EAAAtH,IACAzM,KAAAwT,YAAA/G,IAIAsF,eAAA,WAEA,IAAAhO,EAAA/D,KAAAf,QAAA8E,cACA/D,KAAAuD,UAAA7C,SAAAqD,GACA/D,KAAAuD,UAAAhC,YAAAwC,GAEA/D,KAAAuD,UAAA/B,SAAAuC,IAIAkO,gBAAA,WACAjS,KAAAkM,SAGAlM,KAAAuM,QAFAvM,KAAA2J,QAMA4H,aAAA,SAAA1K,GACA,OAAAmN,SAAAnN,EAAAoN,aAAA,cAAA,KAGA1K,eAAA,WACA,IAAAzI,EAAAd,KAAAf,QAAA6B,MAGAd,KAAAc,MAAAd,KAAAqL,OAAA2I,SAAAlT,EAAA,KAAA,IAGA2I,mBAAA,WACA,IAAAwC,EAAAjM,KACAwD,EAAAxD,KAAAwD,gBAEA,SAAA4P,EAAAnN,GACA,IAAAuL,EACAvF,EAAArF,QAAAa,YAAAwE,EAAArF,QAAAa,WAAAJ,MAAApB,EAAAuL,KACA,gBACAvL,EAAAuL,KACAvF,EAAA,KAAAuF,GAAAvL,GAEAzH,EAAAkI,QAAAlG,GAAA,SAAA4S,GACA5U,EAAA0I,SAAAa,MAAAvH,GAAA,UAAA4S,GACApT,KAAAuD,UAAA/C,GAAA,QAAA4S,GACApT,KAAA4G,QAAAG,MACAvD,EAAAhD,GACA,4CACA4S,GAEApT,KAAAf,QAAAgG,oBAAAjF,KAAA4G,QAAAa,YACAjE,EAAAhD,GACA,uCACA4S,GAGApT,KAAA4G,QAAAa,YACAjE,EAAAhD,GAAAR,KAAA4G,QAAAa,WAAAJ,IAAA+L,GAEApT,KAAAoT,cAAAA,GAGA/F,sBAAA,WACA,IAAA7J,EAAAxD,KAAAwD,gBACA4P,EAAApT,KAAAoT,cACA5U,EAAAkI,QAAAkH,IAAA,SAAAwF,GACA5U,EAAA0I,SAAAa,MAAA6F,IAAA,UAAAwF,GACApT,KAAAuD,UAAAqK,IAAA,QAAAwF,GACApT,KAAA4G,QAAAG,MACAvD,EAAAoK,IACA,4CACAwF,GAEApT,KAAAf,QAAAgG,oBAAAjF,KAAA4G,QAAAa,YACAjE,EAAAoK,IACA,uCACAwF,GAGApT,KAAA4G,QAAAa,YACAjE,EAAAoK,IAAA5N,KAAA4G,QAAAa,WAAAJ,IAAA+L,IAIAc,WAAA,WACAlU,KAAAf,QAAAkH,UACAnG,KAAAf,QAAAkH,SAAAmG,KAAAtM,OAIAwJ,WAAA,WACA,IAAAyC,EAAAjM,KASA,OADAA,KAAAuD,UAAA/E,EAAAwB,KAAAf,QAAAsE,WACAvD,KAAAuD,UAAA+F,QAOAtJ,KAAAwD,gBAAAxD,KAAAuD,UACAd,KAAAzC,KAAAf,QAAAuE,iBACA2Q,QACAnU,KAAAwD,gBAAA8F,QAOAtJ,KAAAyD,aAAAzD,KAAAuD,UAAAd,KAAAzC,KAAAf,QAAAwE,cAAA0Q,QACA,IAAAnU,KAAAqJ,KACArJ,KAAAuD,UAAA/B,SAAAxB,KAAAf,QAAA0E,aAEA3D,KAAAf,QAAAiH,QACAlG,KAAAf,QAAAiH,OAAAoG,KAAAtM,MAEAA,KAAA4G,QAAAa,YAAAzH,KAAAf,QAAAuF,kBACAxE,KAAAuD,UAAA/C,GAAAR,KAAA4G,QAAAa,WAAAJ,IAhCA,SAAA+M,EAAAnO,GACAA,EAAA0H,SAAA1B,EAAA1I,UAAA,KACA0I,EAAA1I,UAAAqK,IAAA3B,EAAArF,QAAAa,WAAAJ,IAAA+M,GACAnI,EAAAiI,gBA+BAlU,KAAAkU,aAEAlU,KAAAf,QAAAkG,qBAEAnF,KAAAwN,kBAAAtG,SAAAa,KAAAJ,MAAA4F,SACArG,SAAAa,KAAAJ,MAAA4F,SAAA,UAEAvN,KAAAuD,UAAA,GAAAoE,MAAA2F,QAAA,QACAtN,KAAA+M,kBACA/M,KAAAuD,UAAA/B,SAAAxB,KAAAf,QAAAyE,gBAzBA1D,KAAAyG,QAAAE,IACA,+CACA3G,KAAAf,QAAAuE,kBAEA,KAdAxD,KAAAyG,QAAAE,IACA,+CACA3G,KAAAf,QAAAsE,YAEA,IAkCA8Q,YAAA,SAAApV,GAEAe,KAAAC,UAAA1B,EAAA+V,SAAAC,WAAA3H,UAAA3N,QAAAA,IAEAe,KAAAqJ,IAAA,IAGArJ,KAAAf,QAAAqG,aAAAtF,KAAAf,QAAAqG,YAAA,MAEAtF,KAAA4G,QAAAa,aACAzH,KAAAf,QAAAgG,oBAAA,GAEAjF,KAAAf,QAAAgH,OACAjG,KAAA2C,eAAA3C,KAAAf,QAAAgH,UAyBA,OAnBAvH,EAAAgD,SAAA4B,GAmBA3E,EAAA2E,SAAAA,IAEAlF,EAAA,oCACA,sBACA,qBACA,oBACA,uBACA,UACA,WACA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,IAAA4V,EAAA5V,EAAAE,SACAC,UAAA,QAEAC,WAAA,2BAEAC,SACAwV,UAAA,OACAC,gBAAA,EACAC,aAAA,KACAC,YAAA,iBACAC,YAAA,EACAC,UAAA,gBACAvV,SAAA,gHACAD,MACAC,SAAA,wGAEA2T,WAAA,MAGApT,WAAA,SAAAC,EAAAd,GACAe,KAAAC,UAAAF,EAAAd,GAEAe,KAAA+U,YAAAxW,EAAAgB,SAAAS,KAAAf,QAAAK,KAAAC,UAEA,IAAA,IAAAkN,EAAA,EAAAA,EAAAxN,EAAAmK,MAAAE,OAAAmD,IAAA,CACA,IAAAuI,EAAAhV,KAAA+U,YAAA9V,EAAAmK,MAAAqD,IACAzM,KAAAI,MAAA6U,OAAAzW,EAAAwW,QASA,OAFAtW,EAAAgD,SAAA8S,GAEA7V,EAAA6V,MAAAA,IAEApW,EAAA,mCACA,sBACA,qBACA,oBACA,uBACA,UACA,oBACA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAiD,GAGA,IAAAsT,EAAAtT,EAAA9C,SACAC,UAAA,OAEAC,WAAA,4BAMA,OAFAN,EAAAgD,SAAAwT,GAEAvW,EAAAuW,QAAAA,IAEA9W,EAAA,mCACA,UACA,aACA,eACA,UACA,aACA,UACA,UACA,SAAAO,GACA,OAAAA,IAEAP,EAAA,8BAAA,mCAAA,SAAA+W,GAAA,OAAAA","file":"../skylark-domx-plugins-lists.js","sourcesContent":["define('skylark-domx-plugins-lists/lists',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.plugins.lists\",{});\r\n});\n define('skylark-domx-plugins-lists/Group',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\"\r\n],function(langx,$,elmx,plugins,lists){\r\n\r\n    var Group = plugins.Plugin.inherit({\r\n        klassName : \"Group\",\r\n\r\n        pluginName : \"domx.plugins.lists.group\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                velm = this._velm = elmx(this._elm),\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.selected = value;\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.selected = this.options.selected;\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Group);\r\n\r\n  return lists.Group = Group;\r\n\r\n});\r\n\r\n\r\n\r\n\n define('skylark-domx-plugins-lists/_MultitierList',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-domx-plugins-toggles/Collapsable\",\r\n  \"./lists\",\r\n  \"./Group\"\r\n],function(langx,$,elmx,plugins,Collapsable,lists,Group){\r\n\r\n    var _MultitierList = Group.inherit({\r\n        klassName : \"_MultitierList\",\r\n\r\n        options : {\r\n          multitier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popover\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\",\r\n              toggler : \" > a\"\r\n            },\r\n            classes : {\r\n              collapsed : \"\",\r\n              expanded : \"\"\r\n            },\r\n\r\n            multiExpand : true,\r\n          }\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            var multitierMode = this.options.multitier.mode,\r\n                hasChildrenSelector = this.options.multitier.selectors.hasChildren,\r\n                childrenSelector = this.options.multitier.selectors.children;           \r\n\r\n\r\n              var multiExpand = self.options.multitier.multiExpand,\r\n                  togglerSelector = self.options.multitier.selectors.toggler;\r\n\r\n              this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                  e.preventDefault();\r\n\r\n                  if (multiExpand) {\r\n                      langx.scall($(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").plugin(\"domx.toggles.collapsable\"),\"hide\");\r\n                  }\r\n                  $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).plugin(\"domx.toggles.collapsable\").toggle();\r\n              });\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n        }\r\n\r\n  });\r\n\r\n\r\n  return lists._MultitierList = _MultitierList;\r\n\r\n});\r\n\r\n\r\n\r\n\n define('skylark-domx-plugins-lists/Foldable',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n  var Foldable = _MultitierList.inherit({\r\n    klassName : \"Foldable\",\r\n\r\n    pluginName : \"domx.plugins.lists.foldable\"\r\n\r\n  });\r\n\r\n  plugins.register(Foldable);\r\n\r\n  return lists.Foldable = Foldable;\r\n});\r\n\n define('skylark-domx-plugins-lists/Cascadable',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n\r\n  var Cascadable = _MultitierList.inherit({\r\n    klassName : \"Cascadable\",\r\n\r\n    pluginName : \"domx.plugins.lists.cascadable\"\r\n  });\r\n\r\n\r\n  plugins.register(Cascadable);\r\n\r\n  return lists.Cascadable = Cascadable;\t\r\n});\ndefine('skylark-domx-plugins-lists/Slidable',[\r\n  'skylark-langx/langx',\r\n  'skylark-domx-noder',\r\n  'skylark-domx-query',\r\n  'skylark-domx-plugins',\r\n  \"./lists\"\r\n], function (langx, noder, $,plugins,lists) {\r\n  'use strict'\r\n  var Slidable = plugins.Plugin.inherit({\r\n    klassName: \"Slidable\",\r\n\r\n    pluginName : \"domx.plugins.lists.slidable\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the gallery view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'lark-domx-slidable-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'lark-domx-slidable-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'lark-domx-slidable-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'lark-domx-slidable-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'lark-domx-slidable-playing',\r\n\r\n\t\t\t// The class to add when the gallery controls are visible:\r\n\t\tcontrolsClass: 'lark-domx-slidable-controls',\r\n\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: false,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: false,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: false,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n\r\n\r\n        // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'thumbnail',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n\r\n\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: undefined,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: undefined,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: undefined,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: undefined\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n\r\n    console: window.console && typeof window.console.log === 'function' ?\r\n      window.console : {\r\n        log: function () {}\r\n      },\r\n\r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch: window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n\r\n      function elementTests() {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n            .getComputedStyle(element)\r\n            .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n            .getComputedStyle(element)\r\n            .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame: window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame: window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    _construct: function (gallery, options) {\r\n      this.overrided(gallery, options);\r\n\r\n      this.list = this.options.items;\r\n      this.options.container = this.elm();\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      if (this.initWidget() === false) {\r\n        return false\r\n      }\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    createIndicator: function (obj) {\r\n      var gallery = this.gallery,\r\n        indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = obj.title;\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = obj[thumbnailProperty]\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        this.timeout = this.setTimeout(\r\n          (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n          [this.index + 1, this.options.slideshowTransitionSpeed],\r\n          this.interval\r\n        )\r\n      }\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty();\r\n      this.unloadAllSlides();\r\n      this.slides = [];\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    handleClose: function () {\r\n      if (this.activeIndicator) {\r\n        this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n      }\r\n\r\n      var options = this.options\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause()\r\n      this.container[0].style.display = 'none'\r\n      this.container\r\n        .removeClass(options.displayClass)\r\n        .removeClass(options.singleClass)\r\n        .removeClass(options.leftEdgeClass)\r\n        .removeClass(options.rightEdgeClass)\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n\r\n      function closeHandler(event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, closeHandler)\r\n        this.container.removeClass(this.options.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault();\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {;\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n              (index === this.num - 1 && touchDeltaX < 0) ?\r\n              Math.abs(touchDeltaX) / this.slideWidth + 1 :\r\n              1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose = !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this.container[0].clientHeight) {\r\n        target.style.maxHeight = this.container[0].clientHeight\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target));\r\n        return;\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n        return;\r\n      }\r\n\r\n\r\n      function isTarget(className) {\r\n        return $(target).hasClass(className) || $(parent).hasClass(className)\r\n      }\r\n      if (isTarget(options.toggleClass)) {\r\n        // Click on \"toggle\" control\r\n        this.preventDefault(event)\r\n        this.toggleControls()\r\n      } else if (isTarget(options.prevClass)) {\r\n        // Click on \"prev\" control\r\n        this.preventDefault(event)\r\n        this.prev()\r\n      } else if (isTarget(options.nextClass)) {\r\n        // Click on \"next\" control\r\n        this.preventDefault(event)\r\n        this.next()\r\n      } else if (isTarget(options.closeClass)) {\r\n        // Click on \"close\" control\r\n        this.preventDefault(event)\r\n        this.close()\r\n      } else if (isTarget(options.playPauseClass)) {\r\n        // Click on \"play-pause\" control\r\n        this.preventDefault(event)\r\n        this.toggleSlideshow()\r\n      } else if (parent === this.slidesContainer[0]) {\r\n        // Click on slide background\r\n        if (options.closeOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.close()\r\n        } else if (options.toggleControlsOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        }\r\n      } else if (\r\n        parent.parentNode &&\r\n        parent.parentNode === this.slidesContainer[0]\r\n      ) {\r\n        // Click on displayed element\r\n        if (options.toggleControlsOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index);\r\n      this.setActiveIndicator(index)\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var element = this.options.renderItem(obj, callback);\r\n      $(element).addClass(this.options.slideContentClass);\r\n      return element;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n              this.options.slideErrorClass\r\n            ) ?\r\n            3 :\r\n            2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).addClass(this.options.slideLoadingClass)\r\n          this.slides[index].appendChild(\r\n            this.createElement(this.list[index], this.proxyListener)\r\n          )\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide);\r\n      this.addIndicator(index)\r\n\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index ?\r\n          -this.slideWidth :\r\n          this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      if (!reload) {\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n      }\r\n\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var index = this.options.index;\r\n\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n\r\n      function proxyListener(event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type ?\r\n          'transitionend' :\r\n          event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initWidget: function () {\r\n      var that = this\r\n\r\n      function openHandler(event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        this.console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        this.console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options, options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  plugins.register(Slidable);\r\n\r\n  /*\r\n  Gallery.installAddon(\"views\", {\r\n    \"name\": \"slider\",\r\n    \"ctor\": SliderView,\r\n    \"templates\": {\r\n      \"default\": '<div class=\"slides\"></div>' +\r\n        '<h3 class=\"title\"></h3>' +\r\n        '<a class=\"prev\">‹</a>' +\r\n        '<a class=\"next\">›</a>' +\r\n        '<a class=\"close\">×</a>' +\r\n        '<a class=\"play-pause\"></a>' +\r\n        '<ol class=\"indicator\"></ol>'\r\n\r\n    }\r\n  });\r\n  */\r\n\r\n  return lists.Slidable = Slidable;\r\n});\n define('skylark-domx-plugins-lists/Tiler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./Group\"\r\n],function(langx,$,elmx,plugins,lists,Group){\r\n\r\n\r\n  var Tiler = Group.inherit({\r\n    klassName : \"Tiler\",\r\n\r\n    pluginName : \"domx.plugins.lists.tiler\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        viewClass: \"repeater-tile\",\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail\"><img height=\"75\" src=\"<%= href %>\" width=\"65\"><span><%= title %></span></div>'\r\n        },\r\n        renderItem : null\r\n    },\r\n\r\n    _construct: function (elm, options) {\r\n      this.overrided(elm, options);\r\n\r\n      this._renderItem = langx.template(this.options.item.template);\r\n\r\n      for (var i=0;i<options.items.length;i++) {\r\n        var itemHtml = this._renderItem(options.items[i]);\r\n        this._velm.append($(itemHtml));\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Tiler);\r\n\r\n  return lists.Tiler = Tiler;\t\r\n});\n define('skylark-domx-plugins-lists/Tree',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n\r\n  var Cascade = _MultitierList.inherit({\r\n    klassName : \"Tree\",\r\n\r\n    pluginName : \"domx.plugins.lists.tree\"\r\n  });\r\n\r\n\r\n  plugins.register(Cascade);\r\n\r\n  return lists.Cascade = Cascade;\t\r\n});\ndefine('skylark-domx-plugins-lists/main',[\r\n    \"./lists\",\r\n    \"./Foldable\",\r\n    \"./Cascadable\",\r\n    \"./Group\",\r\n    \"./Slidable\",\r\n    \"./Tiler\",\r\n    \"./Tree\"\r\n], function(lists) {\r\n    return lists;\r\n});\ndefine('skylark-domx-plugins-lists', ['skylark-domx-plugins-lists/main'], function (main) { return main; });\n\n"]}