{"version":3,"sources":["skylark-domx-plugins-lists.js"],"names":["define","skylark","attach","langx","$","elmx","plugins","lists","Group","Plugin","inherit","klassName","pluginName","options","multiSelect","classes","active","selectors","item","template","checkable","icon","text","selected","state","Object","_construct","elm","this","overrided","self","velm","_velm","_elm","itemSelector","_$items","on","veItem","hasClass","value","data","undefined","index","_refresh","updates","findItem","valueOrIdx","isNumber","eq","filter","oldValue","removeClass","addClass","selectOneItem","register","Collapsable","_MultitierList","multitier","mode","levels","children","hasChildren","toggler","collapsed","expanded","multiExpand","childrenSelector","togglerSelector","has","find","e","preventDefault","scall","closest","siblings","plugin","toggleClass","toggle","not","Foldable","Cascadable","browser","noder","styler","eventer","touch","Slidable","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","controlsClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","onopen","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","gallery","list","items","num","length","initStartIndex","initWidget","initEventListeners","ontransitionend","play","createIndicator","obj","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","title","getElementsByTagName","src","style","backgroundImage","addIndicator","setAttribute","appendChild","indicators","push","setActiveIndicator","activeIndicator","slide","to","speed","window","clearTimeout","timeout","direction","naturalDirection","diff","circle","Math","abs","positions","slideWidth","move","getIndex","getNumber","prev","next","time","stop","interval","elements","debounce","bind","pause","add","i","concat","Array","prototype","slice","call","addSlide","positionSlide","initSlides","resetSlides","empty","unloadAllSlides","slides","handleClose","destroyEventListeners","hide","document","body","overflow","bodyOverflowStyle","close","that","support","transition","end","closeHandler","event","target","off","dist","translateX","translate","x","y","css","translateY","animate","from","start","Date","getTime","timer","setInterval","timeElap","left","clearInterval","floor","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","ontouchstart","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","defer","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","keyCode","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","className","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","firstChild","alt","createTextNode","setTimeout","func","args","wait","apply","createElement","callback","element","renderItem","loadElement","proxyListener","limit","min","j","hasOwnProperty","unloadSlide","slidePrototype","width","reload","query","imagePrototype","elementPrototype","clientWidth","removeChild","len","parseInt","getAttribute","isTouchEnabled","handleOpen","first","openHandler","show","initOptions","mixin","SliderView","Tiler","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","viewClass","_renderItem","itemHtml","append","Cascade","main"],"mappings":"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","file":"../skylark-domx-plugins-lists.js","sourcesContent":["define('skylark-domx-plugins-lists/lists',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.plugins.lists\",{});\r\n});\n define('skylark-domx-plugins-lists/Group',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\"\r\n],function(langx,$,elmx,plugins,lists){\r\n\r\n    var Group = plugins.Plugin.inherit({\r\n        klassName : \"Group\",\r\n\r\n        pluginName : \"domx.plugins.lists.group\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                velm = this._velm = elmx(this._elm),\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.selected = value;\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.selected = this.options.selected;\r\n\r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Group);\r\n\r\n  return lists.Group = Group;\r\n\r\n});\r\n\r\n\r\n\r\n\n define('skylark-domx-plugins-lists/_MultitierList',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-domx-plugins-toggles/Collapsable\",\r\n  \"./lists\",\r\n  \"./Group\"\r\n],function(langx,$,elmx,plugins,Collapsable,lists,Group){\r\n\r\n    var _MultitierList = Group.inherit({\r\n        klassName : \"_MultitierList\",\r\n\r\n        options : {\r\n          multitier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popover\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\",\r\n              toggler : \" > a\"\r\n            },\r\n            classes : {\r\n              collapsed : \"\",\r\n              expanded : \"\"\r\n            },\r\n\r\n            multiExpand : true,\r\n          }\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            var multitierMode = this.options.multitier.mode,\r\n                hasChildrenSelector = this.options.multitier.selectors.hasChildren,\r\n                childrenSelector = this.options.multitier.selectors.children;           \r\n\r\n\r\n              var multiExpand = self.options.multitier.multiExpand,\r\n                  togglerSelector = self.options.multitier.selectors.toggler;\r\n\r\n              this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                  e.preventDefault();\r\n\r\n                  if (multiExpand) {\r\n                      langx.scall($(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").plugin(\"domx.toggles.collapsable\"),\"hide\");\r\n                  }\r\n                  $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).plugin(\"domx.toggles.collapsable\").toggle();\r\n              });\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n        }\r\n\r\n  });\r\n\r\n\r\n  return lists._MultitierList = _MultitierList;\r\n\r\n});\r\n\r\n\r\n\r\n\n define('skylark-domx-plugins-lists/Foldable',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n  var Foldable = _MultitierList.inherit({\r\n    klassName : \"Foldable\",\r\n\r\n    pluginName : \"domx.plugins.lists.foldable\"\r\n\r\n  });\r\n\r\n  plugins.register(Foldable);\r\n\r\n  return lists.Foldable = Foldable;\r\n});\r\n\n define('skylark-domx-plugins-lists/Cascadable',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n\r\n  var Cascadable = _MultitierList.inherit({\r\n    klassName : \"Cascadable\",\r\n\r\n    pluginName : \"domx.plugins.lists.cascadable\"\r\n  });\r\n\r\n\r\n  plugins.register(Cascadable);\r\n\r\n  return lists.Cascadable = Cascadable;\t\r\n});\ndefine('skylark-domx-plugins-lists/Slidable',[\r\n  'skylark-langx/langx',\r\n  'skylark-domx-browser',\r\n  'skylark-domx-noder',\r\n  'skylark-domx-styler',\r\n  'skylark-domx-eventer',\r\n  'skylark-domx-query',\r\n  'skylark-domx-plugins',\r\n  \"skylark-devices-points/touch\",\r\n  \"./lists\"\r\n], function (langx,browser, noder, styler, eventer, $,plugins,touch,lists) {\r\n  'use strict'\r\n  var Slidable = plugins.Plugin.inherit({\r\n    klassName: \"Slidable\",\r\n\r\n    pluginName : \"domx.plugins.lists.slidable\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the gallery view:\r\n      ///container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'lark-domx-slidable-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'lark-domx-slidable-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'lark-domx-slidable-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'lark-domx-slidable-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'lark-domx-slidable-playing',\r\n\r\n\t\t\t// The class to add when the gallery controls are visible:\r\n\t\t  controlsClass: 'lark-domx-slidable-controls',\r\n\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: false,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: false,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: false,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n\r\n\r\n        // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'thumbnail',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: undefined,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: undefined,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: undefined,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: undefined\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n\r\n    _construct: function (gallery, options) {\r\n      this.overrided(gallery, options);\r\n      this._velm = this.elmx();\r\n\r\n      this.list = this.options.items;\r\n      //this.options.container = this.elm();\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      if (this.initWidget() === false) {\r\n        return false\r\n      }\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    createIndicator: function (obj) {\r\n      var gallery = this.gallery,\r\n        indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = obj.title;\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = obj[thumbnailProperty]\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (!this.options.continuous) {\r\n        to = this.circle(to)\r\n      }\r\n      // 1: backward, -1: forward:\r\n      direction = Math.abs(index - to) / (index - to)\r\n      // Get the actual position of the slide:\r\n      if (this.options.continuous) {\r\n        naturalDirection = direction\r\n        direction = -this.positions[this.circle(to)] / this.slideWidth\r\n        // If going forward but to < index, use to = slides.length + to\r\n        // If going backward but to > index, use to = -slides.length + to\r\n        if (direction !== naturalDirection) {\r\n          to = -direction * this.num + to\r\n        }\r\n      }\r\n      diff = Math.abs(index - to) - 1\r\n      // Move all the slides between index and to in the right direction:\r\n      while (diff) {\r\n        diff -= 1\r\n        this.move(\r\n          this.circle((to > index ? to : index) - diff - 1),\r\n          this.slideWidth * direction,\r\n          0\r\n        )\r\n      }\r\n      to = this.circle(to)\r\n      this.move(index, this.slideWidth * direction, speed)\r\n      this.move(to, 0, speed)\r\n      if (this.options.continuous) {\r\n        this.move(\r\n          this.circle(to - direction),\r\n          -(this.slideWidth * direction),\r\n          0\r\n        )\r\n      }\r\n\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      ///window.clearTimeout(this.timeout);\r\n      if (this.timeout) {\r\n        this.timeout.stop();\r\n        this.timeout = null;\r\n      }\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        /*\r\n        this.timeout = this.setTimeout(\r\n          (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n          [this.index + 1, this.options.slideshowTransitionSpeed],\r\n          this.interval\r\n        )*/\r\n\r\n        this.timeout = langx.debounce(this.slide.bind(this),this.interval,true)(this.index + 1, this.options.slideshowTransitionSpeed);\r\n      }\r\n      this._velm.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      //window.clearTimeout(this.timeout)\r\n      if (this.timeout) {\r\n        this.timeout.stop();\r\n        this.timeout = null;\r\n      }\r\n      this.interval = null\r\n      //if (this.cancelAnimationFrame) {\r\n      //  this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n      //  this.animationFrameId = null\r\n      //}\r\n      this._velm.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this._velm.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this._velm\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty();\r\n      this.unloadAllSlides();\r\n      this.slides = [];\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    handleClose: function () {\r\n      if (this.activeIndicator) {\r\n        this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n      }\r\n\r\n      var options = this.options\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause();\r\n      this._velm.hide();\r\n      this._velm.removeClass([options.displayClass,options.singleClass,options.leftEdgeClass,options.rightEdgeClass]);\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n\r\n      function closeHandler(event) {\r\n        if (event.target === that._elm) {\r\n          that._velm.off(browser.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.options.displayTransition) {\r\n        this._velm.on(browser.support.transition.end, closeHandler)\r\n        this._velm.removeClass(this.options.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var slide = this.slides[index];\r\n      styler.css(slide,\"transitionDuration\",speed + \"ms\");\r\n      styler.css(slide,\"transform\", 'translate(' + x + 'px, ' +  y +  'px)' +  ' translateZ(0)');\r\n\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault();\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {;\r\n        (event.originalEvent || event).touches = [{\r\n          pageX: event.pageX,\r\n          pageY: event.pageY\r\n        }]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n              (index === this.num - 1 && touchDeltaX < 0) ?\r\n              Math.abs(touchDeltaX) / this.slideWidth + 1 :\r\n              1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        eventer.stop(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose = !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        ///this.setTimeout(this.options.onslideend, [this.index, slide])\r\n        langx.defer(this.options.onslideend, [this.index, slide]);\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this._velm.clientHeight()) {\r\n        target.style.maxHeight = this._velm.clientHeight()\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      ///this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n      langx.defer(this.options.onslidecomplete, [index, parent]);\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            eventer.stop(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            eventer.stop(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            eventer.stop(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            eventer.stop(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        eventer.stop(event)\r\n        this.slide(this.getNodeIndex(target));\r\n        return;\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n        return;\r\n      }\r\n\r\n\r\n      function isTarget(className) {\r\n        return $(target).hasClass(className) || $(parent).hasClass(className)\r\n      }\r\n      if (isTarget(options.toggleClass)) {\r\n        // Click on \"toggle\" control\r\n        eventer.stop(event)\r\n        this.toggleControls()\r\n      } else if (isTarget(options.prevClass)) {\r\n        // Click on \"prev\" control\r\n        eventer.stop(event)\r\n        this.prev()\r\n      } else if (isTarget(options.nextClass)) {\r\n        // Click on \"next\" control\r\n        eventer.stop(event)\r\n        this.next()\r\n      } else if (isTarget(options.closeClass)) {\r\n        // Click on \"close\" control\r\n        eventer.stop(event)\r\n        this.close()\r\n      } else if (isTarget(options.playPauseClass)) {\r\n        // Click on \"play-pause\" control\r\n        eventer.stop(event)\r\n        this.toggleSlideshow()\r\n      } else if (parent === this.slidesContainer[0]) {\r\n        // Click on slide background\r\n        if (options.closeOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.close()\r\n        } else if (options.toggleControlsOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.toggleControls()\r\n        }\r\n      } else if (\r\n        parent.parentNode &&\r\n        parent.parentNode === this.slidesContainer[0]\r\n      ) {\r\n        // Click on displayed element\r\n        if (options.toggleControlsOnSlideClick) {\r\n          eventer.stop(event)\r\n          this.toggleControls()\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this._velm.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this._velm.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this._velm.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this._velm.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index);\r\n      this.setActiveIndicator(index)\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      ///this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n      langx.defer(this.options.onslide, [index, this.slides[index]]);\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var element = this.options.renderItem(obj, callback);\r\n      $(element).addClass(this.options.slideContentClass);\r\n      return element;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n              this.options.slideErrorClass\r\n            ) ?\r\n            3 :\r\n            2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).addClass(this.options.slideLoadingClass)\r\n          this.slides[index].appendChild(\r\n            this.createElement(this.list[index], this.proxyListener)\r\n          )\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide);\r\n      this.addIndicator(index)\r\n\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      styler.css(slide,{\r\n         \"width\" : this.slideWidth + 'px' ,\r\n         \"left\" : index * -this.slideWidth + 'px'\r\n      });\r\n      this.move(\r\n        index,\r\n        this.index > index ?\r\n        -this.slideWidth :\r\n        this.index < index ? this.slideWidth : 0,\r\n        0\r\n      )\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      if (!reload) {\r\n        this.indicatorContainer = this._velm.query(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n      }\r\n\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this._velm.clientWidth();\r\n      this.slideHeight = this._velm.clientHeight();\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this._velm.hasClass(controlsClass)) {\r\n        this._velm.removeClass(controlsClass)\r\n      } else {\r\n        this._velm.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var index = this.options.index;\r\n\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n\r\n      function proxyListener(event) {\r\n        var type =\r\n          browser.support.transition.end === event.type ?\r\n          'transitionend' :\r\n          event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this._velm.on('click', proxyListener)\r\n      if (touch.isTouchEnabled()) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n\r\n      slidesContainer.on(browser.support.transition.end, proxyListener)\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this._velm.off('click', proxyListener)\r\n      if (touch.isTouchEnabled()) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents ) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      slidesContainer.off(browser.support.transition.end, proxyListener)\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initWidget: function () {\r\n      var that = this\r\n\r\n      function openHandler(event) {\r\n        if (event.target === that._elm) {\r\n          that._velm.off(browser.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n      //this.container = $(this.options.container)\r\n      //if (!this.container.length) {\r\n      //  this.console.log(\r\n      //    'blueimp Gallery: Widget container not found.',\r\n      //    this.options.container\r\n      //  )\r\n      //  return false\r\n     // }\r\n      this.slidesContainer = this._velm\r\n        .query(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n\r\n        return false\r\n      }\r\n      this.titleElement = this._velm.query(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this._velm.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.options.displayTransition) {\r\n        this._velm.on(browser.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this._velm.show();\r\n      this.initSlides()\r\n      this._velm.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options, options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  plugins.register(Slidable);\r\n\r\n  /*\r\n  Gallery.installAddon(\"views\", {\r\n    \"name\": \"slider\",\r\n    \"ctor\": SliderView,\r\n    \"templates\": {\r\n      \"default\": '<div class=\"slides\"></div>' +\r\n        '<h3 class=\"title\"></h3>' +\r\n        '<a class=\"prev\">‹</a>' +\r\n        '<a class=\"next\">›</a>' +\r\n        '<a class=\"close\">×</a>' +\r\n        '<a class=\"play-pause\"></a>' +\r\n        '<ol class=\"indicator\"></ol>'\r\n\r\n    }\r\n  });\r\n  */\r\n\r\n  return lists.Slidable = Slidable;\r\n});\n define('skylark-domx-plugins-lists/Tiler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./Group\"\r\n],function(langx,$,elmx,plugins,lists,Group){\r\n\r\n\r\n  var Tiler = Group.inherit({\r\n    klassName : \"Tiler\",\r\n\r\n    pluginName : \"domx.plugins.lists.tiler\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        viewClass: \"repeater-tile\",\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail\"><img height=\"75\" src=\"<%= href %>\" width=\"65\"><span><%= title %></span></div>'\r\n        },\r\n        renderItem : null\r\n    },\r\n\r\n    _construct: function (elm, options) {\r\n      this.overrided(elm, options);\r\n\r\n      this._renderItem = langx.template(this.options.item.template);\r\n\r\n      for (var i=0;i<options.items.length;i++) {\r\n        var itemHtml = this._renderItem(options.items[i]);\r\n        this._velm.append($(itemHtml));\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Tiler);\r\n\r\n  return lists.Tiler = Tiler;\t\r\n});\n define('skylark-domx-plugins-lists/Tree',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins\",\r\n  \"./lists\",\r\n  \"./_MultitierList\"\r\n],function(langx,$,elmx,plugins,lists,_MultitierList){\r\n\r\n\r\n  var Cascade = _MultitierList.inherit({\r\n    klassName : \"Tree\",\r\n\r\n    pluginName : \"domx.plugins.lists.tree\"\r\n  });\r\n\r\n\r\n  plugins.register(Cascade);\r\n\r\n  return lists.Cascade = Cascade;\t\r\n});\ndefine('skylark-domx-plugins-lists/main',[\r\n    \"./lists\",\r\n    \"./Foldable\",\r\n    \"./Cascadable\",\r\n    \"./Group\",\r\n    \"./Slidable\",\r\n    \"./Tiler\",\r\n    \"./Tree\"\r\n], function(lists) {\r\n    return lists;\r\n});\ndefine('skylark-domx-plugins-lists', ['skylark-domx-plugins-lists/main'], function (main) { return main; });\n\n"]}